service: garduino-data-collector

frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  architecture: arm64
  memorySize: 512

  httpApi:
    cors: true

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
          Resource: "arn:aws:dynamodb:${aws:region}:*:*"

plugins:
  - serverless-offline
  - serverless-webpack

custom:
  webpack:
    webpackConfig: "../../../webpack.config.js"

resources:
  Resources:
    data:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: data
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: controllerId
            AttributeType: S
          - AttributeName: ts
            AttributeType: N

        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: ts
            KeyType: RANGE

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        GlobalSecondaryIndexes:
          - IndexName: controllerIdIndex
            KeySchema:
              - AttributeName: controllerId
                KeyType: HASH
              - AttributeName: ts
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

  Outputs:
    url:
      Value:
        Fn::Join: [ "", [ "https://", { "Ref": "HttpApi" }, ".execute-api.${aws:region}.amazonaws.com"] ]

functions:
  store:
    name: store
    handler: index.store
    events:
      - httpApi:
          path: /data/{controllerId}
          method: PUT
  query:
    name: query
    handler: index.query
    events:
      - httpApi:
          path: /data/{controllerId}
          method: GET
